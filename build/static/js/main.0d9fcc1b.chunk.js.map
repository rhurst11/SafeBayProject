{"version":3,"sources":["getWeb3.js","components/HomepageHeader.js","components/HomepageInformation.js","firebase/firebase.js","components/LandingPageForm.js","screens/HomepageScreen.js","context/AuthContext.js","screens/LoginScreen.js","components/BuyTokens.js","components/KYCStatus.js","context/ContractContex.js","screens/StatusScreen.js","components/AdminHeader.js","components/WhitelistAddress.js","components/RequestsTable.js","screens/AdminDashboardScreen.js","components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","useStyles","makeStyles","theme","root","flexGrow","appBar","background","menuButton","marginRight","spacing","backgroundColor","title","button","right","marginLeft","Header","classes","useState","redirectPage","setRedirectPage","className","AppBar","position","Toolbar","to","IconButton","edge","color","aria-label","src","alt","style","height","width","Typography","variant","Button","onClick","push","HomepageInformation","Container","Grid","container","item","xs","href","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","marginTop","border","borderRadius","borderColor","padding","fontFamily","fontWeight","fontSize","text","input","LandingPageForm","props","firstName","setfirstName","lastName","setLastName","email","setEmail","address","setAddress","event","requestsRef","database","ref","request","kyc","alert","pathname","state","Paper","elevation","TextField","InputProps","id","label","value","onChange","target","HomepageScreen","AuthContext","React","createContext","currentUser","AuthProvider","children","setCurrentUser","pending","setPending","useEffect","auth","onAuthStateChanged","user","Provider","subtitle","LoginScreen","useContext","password","setPassword","preventDefault","signInWithEmailAndPassword","type","partial","func","args","Array","prototype","slice","call","arguments","allArguments","concat","apply","this","getTokenBalance","setBalance","contractContext","kryptoniteToken","methods","balanceOf","accounts","amount","callback","events","Transfer","on","BuyTokens","myBalance","buyTokenAmount","setBuyTokenAmount","kryptoniteTokenSale","buyTokens","send","from","listenToTransferEvent","kryptoniteTokenSaleAddress","rootGreen","rootRed","KYCStatus","addressPlaceholder","statusMessage","setStatusMessage","isKycCompleted","setIsKycCompleted","kycContract","tokenPurchaseEnabled","ContractContex","StatusScreen","addressLandingPage","location","Consumer","AdminHeader","signOut","WhitelistAddress","approveAddress","table","minWidth","tableContainer","RequestsTable","approveOrDisapproveAddress","revokeAddress","approveOrDisapproveRequest","requestId","requests","requessRef","child","update","tableRows","key","TableRow","TableCell","component","scope","align","size","red","green","createRows","TableContainer","Table","TableHead","TableBody","AdminDashboardScreen","setRequests","requestsLoaded","setRequestsLoaded","snapshot","val","getRequests","PrivateRoute","RouteComponent","rest","render","routeProps","App","componentDidMount","eth","getAccounts","net","getId","networkId","Contract","KryptoniteToken","abi","networks","KryptoniteTokenSale","KYCContract","setState","web3Loaded","error","path","exact","Component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sRAqCeA,EAnCC,kBACd,IAAIC,SAAQ,SAACC,EAASC,GAEpBC,OAAOC,iBAAiB,OAAxB,sBAAgC,kCAAAC,EAAA,0DAE1BF,OAAOG,SAFmB,wBAGtBC,EAAO,IAAIC,IAAKL,OAAOG,UAHD,kBAMpBH,OAAOG,SAASG,SANI,OAQ1BR,EAAQM,GARkB,gDAU1BL,EAAO,EAAD,IAVoB,gCAcrBC,OAAOI,MAERA,EAAOJ,OAAOI,KACpBG,QAAQC,IAAI,2BACZV,EAAQM,KAIFK,EAAW,IAAIJ,IAAKK,UAAUC,aAClC,yBAEIP,EAAO,IAAIC,IAAKI,GACtBF,QAAQC,IAAI,gDACZV,EAAQM,IA3BoB,8D,8ECQ9BQ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,OAAQ,CACJC,WAAY,WAEhBC,WAAY,CACRC,YAAaN,EAAMO,QAAQ,GAC3B,UAAW,CACPC,gBAAiB,YAGzBC,MAAO,CACHP,SAAU,GAEdQ,OAAQ,CACJ,UAAW,CACPF,gBAAiB,YAGzBG,MAAO,CACHC,WAAY,OACZ,UAAW,CACPJ,gBAAiB,gBAKd,SAASK,IACpB,IAAMC,EAAUhB,IADa,EAEWiB,mBAAS,MAFpB,mBAEtBC,EAFsB,KAERC,EAFQ,KAY7B,OAAoB,MAAhBD,EACOA,EAIH,yBAAKE,UAAWJ,EAAQb,MACpB,kBAACkB,EAAA,EAAD,CAAQC,SAAS,SAASF,UAAWJ,EAAQX,QACzC,kBAACkB,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQN,UAAWJ,EAAQT,WAAYoB,MAAM,UAAUC,aAAW,QAC/E,yBAAKC,IAAI,wBAAwBC,IAAI,iBAAiBC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,YAG9F,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,oBACA,kBAACC,EAAA,EAAD,CAAQT,MAAM,UAAUP,UAAWJ,EAAQH,MAAOwB,QAlBtE,WACIlB,EAAgB,kBAAC,IAAD,CAAUmB,MAAI,EAACd,GAAG,eAiBlB,UACA,kBAACY,EAAA,EAAD,CAAQT,MAAM,UAAUP,UAAWJ,EAAQJ,OAAQyB,QAvBvE,WACIlB,EAAgB,kBAAC,IAAD,CAAUmB,MAAI,EAACd,GAAG,cAsBlB,Y,sBC/DT,SAASe,IACpB,OACI,kBAACC,EAAA,EAAD,CAAWT,MAAO,CAAE,UAAa,KAAM,MAAS,SAC5C,kBAACU,EAAA,EAAD,CAAMC,WAAS,EAACjC,QAAS,GACrB,kBAACgC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,kBAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACX,wBAAIb,MAAO,CAAE,MAAS,QAAS,WAAc,YAAa,WAAc,SAAxE,yCAC0C,0BAAMA,MAAO,CAAEJ,MAAO,YAAtB,cAD1C,YAGA,wBAAII,MAAO,CAAE,MAAS,QAAS,WAAc,YAAa,WAAc,YAAxE,iFAGA,uBAAGc,KAAK,4CACJ,yBAAKhB,IAAI,qBAAqBC,IAAI,iBAAiBC,MAAO,CAAEC,OAAQ,QAASC,MAAO,aAG5F,kBAACQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,M,sBCRhBE,E,MAFHC,EAASC,cAVE,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCQbvD,EAAYC,YAAW,CACzByC,UAAW,CACPc,UAAW,KACXvB,MAAO,OAEX9B,KAAM,CACFO,gBAAiB,UACjB+C,OAAQ,YACRC,aAAc,GACdC,YAAa,UACbC,QAAS,IAEbjD,MAAO,CACHgB,MAAO,QACPkC,WAAY,YACZC,WAAY,WAEhBlD,OAAQ,CACJe,MAAO,QACPoC,SAAU,OACVF,WAAY,YACZC,WAAY,UACZ,UAAW,CACPpD,gBAAiB,YAGzBsD,KAAM,CACFrC,MAAO,QACPkC,WAAY,YACZC,WAAY,QAEhBG,MAAO,CACHtC,MAAO,WAIA,SAASuC,EAAgBC,GACpC,IAAMnD,EAAUhB,IAD2B,EAETiB,mBAAS,SAFA,mBAEpCmD,EAFoC,KAEzBC,EAFyB,OAGXpD,mBAAS,QAHE,mBAGpCqD,EAHoC,KAG1BC,EAH0B,OAIjBtD,mBAAS,2BAJQ,mBAIpCuD,EAJoC,KAI7BC,EAJ6B,OAKbxD,mBAAS,YALI,mBAKpCyD,EALoC,KAK3BC,EAL2B,OAMH1D,mBAAS,MANN,mBAMpCC,EANoC,KAMtBC,EANsB,iDAyB3C,WAA4ByD,GAA5B,iBAAAtF,EAAA,sDACUuF,EAAc/B,EAAIgC,WAAWC,IAAI,YACjCC,EAAU,CACZZ,UAAWA,EACXE,SAAUA,EACVE,MAAOA,EACPE,QAASA,EACTO,KAAK,GAETJ,EAAYvC,KAAK0C,GAEjBE,MAAM,oHAGN/D,EACI,kBAAC,IAAD,CACImB,MAAI,EACJd,GAAI,CACA2D,SAAU,UACVC,MAAO,CAAEV,QAASA,OAnBlC,4CAzB2C,sBAkD3C,OAAoB,MAAhBxD,EACOA,EAIH,kBAACsB,EAAA,EAAD,CAAWpB,UAAWJ,EAAQ0B,WAC1B,kBAAC2C,EAAA,EAAD,CAAOjE,UAAWJ,EAAQb,KAAMmF,UAAW,GACvC,kBAAC7C,EAAA,EAAD,CAAMC,WAAS,EAACjC,QAAS,GACrB,kBAACgC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,wBAAIxB,UAAWJ,EAAQL,OAAvB,8BACA,yBAAKS,UAAWJ,EAAQgD,MAAxB,yMAKJ,kBAACvB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAAC2C,EAAA,EAAD,CACInE,UAAWJ,EAAQJ,OACnB4E,WAAY,CACRpE,UAAWJ,EAAQiD,OAEvBwB,GAAG,YACHC,MAAM,aACNvD,QAAQ,WACRwD,MAAOvB,EACPwB,SAnE5B,SAA+BhB,GAC3BP,EAAaO,EAAMiB,OAAOF,WAqEV,kBAAClD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAAC2C,EAAA,EAAD,CACInE,UAAWJ,EAAQJ,OACnB4E,WAAY,CACRpE,UAAWJ,EAAQiD,OAEvBwB,GAAG,WACHC,MAAM,YACNvD,QAAQ,WACRwD,MAAOrB,EACPsB,SA5E5B,SAA8BhB,GAC1BL,EAAYK,EAAMiB,OAAOF,WA8ET,kBAAClD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAAC2C,EAAA,EAAD,CACInE,UAAWJ,EAAQJ,OACnB4E,WAAY,CACRpE,UAAWJ,EAAQiD,OAEvBwB,GAAG,QACHC,MAAM,QACNvD,QAAQ,WACRwD,MAAOnB,EACPoB,SArF5B,SAA2BhB,GACvBH,EAASG,EAAMiB,OAAOF,WAuFN,kBAAClD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAAC2C,EAAA,EAAD,CACInE,UAAWJ,EAAQJ,OACnB4E,WAAY,CACRpE,UAAWJ,EAAQiD,OAEvBwB,GAAG,UACHC,MAAM,UACNvD,QAAQ,WACRwD,MAAOjB,EACPkB,SA9F5B,SAA6BhB,GACzBD,EAAWC,EAAMiB,OAAOF,WAgGR,kBAAClD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACR,EAAA,EAAD,CAAQhB,UAAWJ,EAAQJ,OAAQuB,QAAQ,WAAWE,QAtHnC,6CAsHnB,sBCnKb,SAASyD,IACpB,OACI,6BACI,kBAAC,EAAD,MACA,kBAACvD,EAAD,MACA,kBAAC2B,EAAD,OCVL,IAAM6B,EAAcC,IAAMC,cAAc,CAACC,YAAa,OAEhDC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACJnF,mBAAS,MADL,mBACnCiF,EADmC,KACtBG,EADsB,OAEZpF,oBAAS,GAFG,mBAEnCqF,EAFmC,KAE1BC,EAF0B,KAW1C,OAPAC,qBAAU,WACN1D,EAAI2D,OAAOC,oBAAmB,SAACC,GAC3BN,EAAeM,GACfJ,GAAW,QAEhB,IAECD,EACO,kDAIH,kBAACP,EAAYa,SAAb,CAAsBjB,MAAO,CAACO,YAAaA,IACtCE,ICFXpG,EAAYC,YAAW,CACzByC,UAAW,CACPc,UAAW,KACXvB,MAAO,OAEX9B,KAAM,CACFO,gBAAiB,UACjB+C,OAAQ,YACRC,aAAc,GACdC,YAAa,UACbC,QAAS,IAEbjD,MAAO,CACHgB,MAAO,QACPkC,WAAY,YACZC,WAAY,WAEhB+C,SAAU,CACNlF,MAAO,QACPkC,WAAY,YACZC,WAAY,QAEhBlD,OAAQ,CACJe,MAAO,QACPoC,SAAU,OACVF,WAAY,YACZC,WAAY,UACZ,UAAW,CACPpD,gBAAiB,YAGzBuD,MAAO,CACHtC,MAAO,WAIA,SAASmF,IAAe,IAC3BZ,EAAgBa,qBAAWhB,GAA3BG,YACFlF,EAAUhB,IAFkB,EAGRiB,mBAAS,iBAHD,mBAG3BuD,EAH2B,KAGpBC,EAHoB,OAIFxD,mBAAS,YAJP,mBAI3B+F,EAJ2B,KAIjBC,EAJiB,OAKMhG,mBAAS,MALf,mBAKbE,GALa,uDAelC,WAAqByD,GAArB,SAAAtF,EAAA,6DACIsF,EAAMsC,iBADV,kBAGcpE,EAAI2D,OAAOU,2BAA2B3C,EAAOwC,GAH3D,OAIQrH,QAAQC,IAAI,gBACZuB,EAAgB,kBAAC,IAAD,CAAUmB,MAAI,EAACd,GAAG,YAL1C,gDAOQ0D,MAAM,EAAD,IAPb,0DAfkC,sBA0BlC,OAAIgB,EACO,kBAAC,IAAD,CAAU5D,MAAI,EAACd,GAAG,WAIrB,6BACI,kBAAC,EAAD,MACA,kBAACgB,EAAA,EAAD,CAAWpB,UAAWJ,EAAQ0B,WAC1B,kBAAC2C,EAAA,EAAD,CAAOjE,UAAWJ,EAAQb,KAAMmF,UAAW,GACvC,kBAAC7C,EAAA,EAAD,CAAMC,WAAS,EAACjC,QAAS,GACrB,kBAACgC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,uBAAGC,KAAK,4CACJ,yBAAKhB,IAAI,qBAAqBC,IAAI,iBAAiBC,MAAO,CAAEC,OAAQ,QAASC,MAAO,YAExF,yBAAKb,UAAWJ,EAAQ6F,UAAxB,0BAC2B,0BAAM9E,MAAO,CAAEJ,MAAO,YAAtB,cAD3B,aAIJ,kBAACc,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,wBAAIxB,UAAWJ,EAAQL,OAAvB,eAEJ,kBAAC8B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAAC2C,EAAA,EAAD,CACInE,UAAWJ,EAAQJ,OACnB4E,WAAY,CACRpE,UAAWJ,EAAQiD,OAEvBwB,GAAG,QACHC,MAAM,gBACNvD,QAAQ,WACRwD,MAAOnB,EACPoB,SAlDhC,SAA2BhB,GACvBH,EAASG,EAAMiB,OAAOF,WAoDF,kBAAClD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAAC2C,EAAA,EAAD,CACInE,UAAWJ,EAAQJ,OACnB4E,WAAY,CACRpE,UAAWJ,EAAQiD,OAEvBmD,KAAK,WACL3B,GAAG,WACHC,MAAM,WACNvD,QAAQ,WACRwD,MAAOqB,EACPpB,SA5DhC,SAA8BhB,GAC1BqC,EAAYrC,EAAMiB,OAAOF,WA8DL,kBAAClD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACR,EAAA,EAAD,CAAQhB,UAAWJ,EAAQJ,OAAQuB,QAAQ,WAAWE,QA3EhD,6CA2EN,cCxHhC,IAAMrC,EAAYC,YAAW,CACzByC,UAAW,CACPc,UAAW,KACXvB,MAAO,OAEX9B,KAAM,CACFO,gBAAiB,UACjB+C,OAAQ,YACRC,aAAc,GACdC,YAAa,UACbC,QAAS,IAEbjD,MAAO,CACHgB,MAAO,QACPkC,WAAY,YACZC,WAAY,WAEhBlD,OAAQ,CACJe,MAAO,QACPoC,SAAU,OACVF,WAAY,YACZC,WAAY,UACZ,UAAW,CACPpD,gBAAiB,YAGzBsD,KAAM,CACFrC,MAAO,QACPkC,WAAY,YACZC,WAAY,QAEhBG,MAAO,CACHtC,MAAO,WAIf,SAAS0F,EAAQC,GACb,IAAIC,EAAOC,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,GACjD,OAAO,WACH,IAAIC,EAAeN,EAAKO,OAAON,MAAMC,UAAUC,MAAMC,KAAKC,YAC1D,OAAON,EAAKS,MAAMC,KAAMH,I,SAIjBI,E,gFAAf,WAA+B9D,EAAO+D,GAAtC,eAAA5I,EAAA,sEACuB6E,EAAMgE,gBAAgBC,gBAAgBC,QAAQC,UAAUnE,EAAMgE,gBAAgBI,SAAS,IAAIZ,OADlH,OACQa,EADR,OAEIN,EAAWM,GAFf,4C,kEAKA,WAAqCrE,EAAO+D,GAA5C,eAAA5I,EAAA,sDACQmJ,EAAWpB,EAAQY,EAAiB9D,EAAO+D,GAC/C/D,EAAMgE,gBAAgBC,gBAAgBM,OAAOC,SAAS,CAAEnH,GAAI2C,EAAMgE,gBAAgBI,SAAS,KAAMK,GAAG,OAAQH,GAFhH,4C,sBAMe,SAASI,EAAU1E,GAC9B,IAAMnD,EAAUhB,IADqB,EAELiB,mBAAS,GAFJ,mBAE9B6H,EAF8B,KAEnBZ,EAFmB,OAGOjH,mBAAS,IAHhB,mBAG9B8H,EAH8B,KAGdC,EAHc,iDAqBrC,sBAAA1J,EAAA,sEACU6E,EAAMgE,gBAAgBc,oBAAoBZ,QAAQa,UAAU/E,EAAMgE,gBAAgBI,SAAS,IAAIY,KAAK,CACtGC,KAAMjF,EAAMgE,gBAAgBI,SAAS,GACrC5C,MAAOoD,IAHf,4CArBqC,sBA4BrC,OAtBAvC,qBAAU,WACNyB,EAAgB9D,EAAO+D,KACxB,CAAC/D,EAAO+D,IAIX1B,qBAAU,Y,sCACN6C,CAAsBlF,EAAO+D,KAC9B,CAAC/D,EAAO+D,IAeP,kBAAC1F,EAAA,EAAD,CAAWpB,UAAWJ,EAAQ0B,WAC1B,kBAAC2C,EAAA,EAAD,CAAOjE,UAAWJ,EAAQb,KAAMmF,UAAW,GACvC,kBAAC7C,EAAA,EAAD,CAAMC,WAAS,EAACjC,QAAS,GACrB,kBAACgC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,wBAAIxB,UAAWJ,EAAQL,OAAvB,yBACA,wBAAIS,UAAWJ,EAAQL,OAAvB,qBAAiDwD,EAAMgE,gBAAgBmB,4BACvE,wBAAIlI,UAAWJ,EAAQL,OAAvB,eAA2CmI,EAA3C,SAEJ,kBAACrG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAAC2C,EAAA,EAAD,CACInE,UAAWJ,EAAQJ,OACnB4E,WAAY,CACRpE,UAAWJ,EAAQiD,OAEvBwB,GAAG,iBACHC,MAAM,eACNvD,QAAQ,WACRwD,MAAOoD,EACPnD,SA/BxB,SAAsBhB,GAClBoE,EAAkBpE,EAAMiB,OAAOF,WAiCnB,kBAAClD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACR,EAAA,EAAD,CAAQhB,UAAWJ,EAAQJ,OAAQuB,QAAQ,WAAWE,QAnDrC,4CAmDjB,kBC1GxB,IAAMrC,EAAYC,YAAW,CACzByC,UAAW,CACPc,UAAW,KACXvB,MAAO,OAEXsH,UAAW,CACP7I,gBAAiB,UACjB+C,OAAQ,YACRC,aAAc,GACdC,YAAa,UACbC,QAAS,IAEb4F,QAAS,CACL9I,gBAAiB,UACjB+C,OAAQ,YACRC,aAAc,GACdC,YAAa,UACbC,QAAS,IAEbjD,MAAO,CACHgB,MAAO,QACPkC,WAAY,YACZC,WAAY,WAEhBlD,OAAQ,CACJe,MAAO,QACPoC,SAAU,OACVF,WAAY,YACZC,WAAY,UACZ,UAAW,CACPpD,gBAAiB,YAGzBsD,KAAM,CACFrC,MAAO,QACPkC,WAAY,YACZC,WAAY,QAEhBG,MAAO,CACHtC,MAAO,WAIA,SAAS8H,EAAUtF,GAG9B,IAAIuF,EAAqB,YACrBvF,EAAMO,UACNgF,EAAqBvF,EAAMO,SAG/B,IAAM1D,EAAUhB,IARqB,EASPiB,mBAASyI,GATF,mBAS9BhF,EAT8B,KASrBC,EATqB,OAUK1D,mBAAS,IAVd,mBAU9B0I,EAV8B,KAUfC,EAVe,OAWO3I,mBAAS,MAXhB,mBAW9B4I,EAX8B,KAWdC,EAXc,iDAqBrC,WAA6BlF,GAA7B,eAAAtF,EAAA,6DACIsF,EAAMsC,iBAEF2C,GAAiB,EAHzB,kBAO+B1F,EAAMgE,gBAAgB4B,YAAY1B,QAAQwB,eAAenF,GAASiD,OAPjG,OAOQkC,EAPR,8DASQD,EAAiB,iCACjBE,EAAkBD,GAV1B,2BAeIC,EAAkBD,GAEdD,EADAC,EACiB,gEAGA,wGAIrB1F,EAAM6F,qBAAqBH,GAxB/B,0DArBqC,sBAgDrC,OACI,kBAACrH,EAAA,EAAD,CAAWpB,UAAWJ,EAAQ0B,WAC1B,kBAACD,EAAA,EAAD,CAAMC,WAAS,EAACjC,QAAS,GACrB,kBAACgC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,wBAAIxB,UAAWJ,EAAQL,OAAvB,sBACA,yBAAKS,UAAWJ,EAAQgD,MAAxB,8EAIJ,kBAACvB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAAC2C,EAAA,EAAD,CACInE,UAAWJ,EAAQJ,OACnB4E,WAAY,CACRpE,UAAWJ,EAAQiD,OAEvBwB,GAAG,UACHC,MAAM,UACNvD,QAAQ,WACRwD,MAAOjB,EACPkB,SArDpB,SAAsBhB,GAClBD,EAAWC,EAAMiB,OAAOF,WAuDhB,kBAAClD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACR,EAAA,EAAD,CAAQhB,UAAWJ,EAAQJ,OAAQuB,QAAQ,WAAWE,QAvEjC,6CAuErB,mBAEe,MAAlBwH,IAA6C,IAAnBA,GACvB,kBAACpH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACyC,EAAA,EAAD,CAAOjE,UAAWJ,EAAQwI,QAASlE,UAAW,GAC1C,wBAAIlE,UAAWJ,EAAQL,OAAQgJ,KAI1CE,GACG,kBAACpH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACyC,EAAA,EAAD,CAAOjE,UAAWJ,EAAQuI,UAAWjE,UAAW,GAC5C,wBAAIlE,UAAWJ,EAAQL,OAAQgJ,OCpI3D,IASeM,EATQjE,IAAMC,cAAc,CACvCmC,gBAAiB,KACjBa,oBAAqB,KACrBK,2BAA4B,KAC5BS,YAAa,KACbvK,KAAM,KACN+I,SAAU,OCAC,SAAS2B,GAAa/F,GAAQ,IAAD,EACIlD,oBAAS,GADb,mBACjC4I,EADiC,KACjBC,EADiB,KAKpCK,EAAqB,KAKzB,OAJGhG,EAAMiG,UAAYjG,EAAMiG,SAAShF,QAChC+E,EAAqBhG,EAAMiG,SAAShF,MAAMV,SAI1C,kBAAC,EAAe2F,SAAhB,MACK,SAAA7K,GAAI,OACD,6BACI,kBAAC,EAAD,MACA,kBAACiK,EAAD,CAAWtB,gBAAiB3I,EAAMwK,qBAAsBF,EAAmBpF,QAASyF,IACnFN,GAAkB,kBAAChB,EAAD,CAAWV,gBAAiB3I,QCXnE,IAAMQ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,OAAQ,CACJC,WAAY,WAEhBC,WAAY,CACRC,YAAaN,EAAMO,QAAQ,GAC3B,UAAW,CACPC,gBAAiB,YAGzBC,MAAO,CACHP,SAAU,GAEdS,MAAO,CACHC,WAAY,OACZ,UAAW,CACPJ,gBAAiB,gBAKd,SAAS4J,KACpB,IAAMtJ,EAAUhB,KADkB,EAEMiB,mBAAS,MAFf,mBAE3BC,EAF2B,KAEbC,EAFa,KASlC,OAAoB,MAAhBD,EACOA,EAIH,yBAAKE,UAAWJ,EAAQb,MACpB,kBAACkB,EAAA,EAAD,CAAQC,SAAS,SAASF,UAAWJ,EAAQX,QACzC,kBAACkB,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQN,UAAWJ,EAAQT,WAAYoB,MAAM,UAAUC,aAAW,QAC/E,yBAAKC,IAAI,wBAAwBC,IAAI,iBAAiBC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,YAG9F,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,oBACA,kBAACC,EAAA,EAAD,CAAQT,MAAM,UAAUP,UAAWJ,EAAQH,MAAOwB,QAnBtE,WACIS,EAAI2D,OAAO8D,UACXpJ,EAAgB,kBAAC,IAAD,CAAUmB,MAAI,EAACd,GAAG,SAiBlB,aCpDxB,IAAMxB,GAAYC,YAAW,CACzByC,UAAW,CACPc,UAAW,KACXvB,MAAO,OAEX9B,KAAM,CACFO,gBAAiB,UACjB+C,OAAQ,YACRC,aAAc,GACdC,YAAa,UACbC,QAAS,IAEbjD,MAAO,CACHgB,MAAO,QACPkC,WAAY,YACZC,WAAY,WAEhBlD,OAAQ,CACJe,MAAO,QACPoC,SAAU,OACVF,WAAY,YACZC,WAAY,UACZ,UAAW,CACPpD,gBAAiB,YAGzBsD,KAAM,CACFrC,MAAO,QACPkC,WAAY,YACZC,WAAY,QAEhBG,MAAO,CACHtC,MAAO,WAIA,SAAS6I,GAAiBrG,GACrC,IAAMnD,EAAUhB,KAD4B,EAEdiB,mBAAS,aAFK,mBAErCyD,EAFqC,KAE5BC,EAF4B,iDAQ5C,WAA4BC,GAA5B,SAAAtF,EAAA,sEAIU6E,EAAMgE,gBAAgB4B,YAAY1B,QAAQoC,eAAe/F,GAASyE,KAAK,CACzEC,KAAMjF,EAAMgE,gBAAgBI,SAAS,KAL7C,OAOI3D,EAAMsC,iBACNhC,MAAM,yBAA2BR,GARrC,4CAR4C,sBAmB5C,OACI,kBAAClC,EAAA,EAAD,CAAWpB,UAAWJ,EAAQ0B,WAC1B,kBAAC2C,EAAA,EAAD,CAAOjE,UAAWJ,EAAQb,KAAMmF,UAAW,GACvC,kBAAC7C,EAAA,EAAD,CAAMC,WAAS,EAACjC,QAAS,GACrB,kBAACgC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,wBAAIxB,UAAWJ,EAAQL,OAAvB,sBACA,yBAAKS,UAAWJ,EAAQgD,MAAxB,+DAIJ,kBAACvB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAAC2C,EAAA,EAAD,CACInE,UAAWJ,EAAQJ,OACnB4E,WAAY,CACRpE,UAAWJ,EAAQiD,OAEvBwB,GAAG,UACHC,MAAM,UACNvD,QAAQ,WACRwD,MAAOjB,EACPkB,SAnCxB,SAAsBhB,GAClBD,EAAWC,EAAMiB,OAAOF,WAqCZ,kBAAClD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX,kBAACR,EAAA,EAAD,CAAQhB,UAAWJ,EAAQJ,OAAQuB,QAAQ,WAAWE,QA3C9B,6CA2CxB,uB,0HCrElBrC,GAAYC,YAAW,CACzByC,UAAW,CACPc,UAAW,KACXvB,MAAO,OAEXyI,MAAO,CACHC,SAAU,IACVjK,gBAAiB,UACjBiB,MAAO,SAEXiJ,eAAgB,CACZpH,UAAW,GACXxB,OAAQ,IACRtB,gBAAiB,UACjBiB,MAAO,QAAS8B,OAAQ,YACxBC,aAAc,GAElBM,KAAM,CACFrC,MAAO,SAEXhB,MAAO,CACHgB,MAAO,QACPkC,WAAY,YACZC,WAAY,aAmCL,SAAS+G,GAAc1G,GAClC,IAAMnD,EAAUhB,KADyB,SAG1B8K,EAH0B,gFAGzC,WAA0CpG,EAASmF,GAAnD,SAAAvK,EAAA,0DAIQuK,EAJR,gCAKc1F,EAAMgE,gBAAgB4B,YAAY1B,QAAQoC,eAAe/F,GAASyE,KAAK,CACzEC,KAAMjF,EAAMgE,gBAAgBI,SAAS,KANjD,6CAUcpE,EAAMgE,gBAAgB4B,YAAY1B,QAAQ0C,cAAcrG,GAASyE,KAAK,CACxEC,KAAMjF,EAAMgE,gBAAgBI,SAAS,KAXjD,4CAHyC,sBAmBzC,IAAMyC,EAA0B,uCAAG,WAAOpG,EAAOqG,GAAd,iBAAA3L,EAAA,6DAM3B0F,EAAUb,EAAM+G,SAASD,IACrBhG,KAAOD,EAAQC,IAPQ,kBAWrB6F,EAA2B9F,EAAQN,QAASM,EAAQC,KAX/B,8DAa3BC,MAAM,qEAbqB,kCAkBzBiG,EAAarI,EAAIgC,WAAWC,IAAI,YAAYqG,MAAMH,GAlBzB,UAmBzBE,EAAWE,OAAO,CACpBpG,IAAKD,EAAQC,MApBc,QAsB/BD,EAAQC,IAAMC,MAAM,sCAAwCA,MAAM,wBAtBnC,yDAAH,wDA0B5BoG,EA3ER,SAAoBJ,EAAUlK,EAASgK,GAKnC,IAAIM,EAAY,GAL+C,WAMtDC,GACLD,EAAUhJ,KACN,kBAAEkJ,GAAA,EAAF,CAAWD,IAAKA,GACZ,kBAACE,GAAA,EAAD,CAAWrK,UAAWJ,EAAQgD,KAAM0H,UAAU,KAAKC,MAAM,OACpDT,EAASK,GAAK7G,SAEnB,kBAAC+G,GAAA,EAAD,CAAWrK,UAAWJ,EAAQgD,KAAM4H,MAAM,SAASV,EAASK,GAAKnH,WACjE,kBAACqH,GAAA,EAAD,CAAWrK,UAAWJ,EAAQgD,KAAM4H,MAAM,SAASV,EAASK,GAAKjH,UACjE,kBAACmH,GAAA,EAAD,CAAWrK,UAAWJ,EAAQgD,KAAM4H,MAAM,SAASV,EAASK,GAAK/G,OACjE,kBAACiH,GAAA,EAAD,CAAWrK,UAAWJ,EAAQgD,KAAM4H,MAAM,UAAUV,EAASK,GAAKtG,IAAM,MAAQ,MAChF,kBAACwG,GAAA,EAAD,CAAWrK,UAAWJ,EAAQgD,KAAM4H,MAAM,SACtC,kBAACnK,EAAA,EAAD,CAAYE,MAAM,UAAUC,aAAW,uBAAuBiK,KAAK,QAAQxJ,QAAS,SAACuC,GAAD,OAAWoG,EAA2BpG,EAAO2G,KAC5HL,EAASK,GAAKtG,IAAM,uBAAGlD,MAAO,CAAEJ,MAAOmK,KAAI,OAAvB,cAAiD,uBAAG/J,MAAO,CAAEJ,MAAOoK,KAAM,OAAzB,WAD1E,OAGKb,EAASK,GAAKtG,IAAM,kBAAC,KAAD,CAAYtD,MAAM,cAAiB,kBAAC,KAAD,CAAkBI,MAAO,CAAEJ,MAAOoK,KAAM,aAdpH,IAAK,IAAIR,KAAOL,EAAW,EAAlBK,GAqBT,OAAOD,EAgDSU,CAAW7H,EAAM+G,SAAUlK,EAASgK,GAEpD,OACI,kBAACxI,EAAA,EAAD,CAAWpB,UAAWJ,EAAQ0B,WAC1B,wBAAItB,UAAWJ,EAAQL,OAAvB,sCACA,kBAACsL,GAAA,EAAD,CAAgBP,UAAWrG,IAAOjE,UAAWJ,EAAQ4J,gBACjD,wBAAIgB,MAAM,QAAV,eAAoCzH,EAAMxD,OAC1C,kBAACuL,GAAA,EAAD,CAAO9K,UAAWJ,EAAQ0J,MAAOmB,KAAK,QAAQjK,aAAW,gBACrD,kBAACuK,GAAA,EAAD,KACI,kBAACX,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWrK,UAAWJ,EAAQgD,KAAM4H,MAAM,OAAO7J,MAAO,CAAE,WAAc,SAAxE,WACA,kBAAC0J,GAAA,EAAD,CAAWrK,UAAWJ,EAAQgD,KAAM4H,MAAM,QAAQ7J,MAAO,CAAE,WAAc,SAAzE,QACA,kBAAC0J,GAAA,EAAD,CAAWrK,UAAWJ,EAAQgD,KAAM4H,MAAM,QAAQ7J,MAAO,CAAE,WAAc,SAAzE,WACA,kBAAC0J,GAAA,EAAD,CAAWrK,UAAWJ,EAAQgD,KAAM4H,MAAM,QAAQ7J,MAAO,CAAE,WAAc,SAAzE,SACA,kBAAC0J,GAAA,EAAD,CAAWrK,UAAWJ,EAAQgD,KAAM4H,MAAM,QAAQ7J,MAAO,CAAE,WAAc,SAAzE,iBACA,kBAAC0J,GAAA,EAAD,CAAWrK,UAAWJ,EAAQgD,KAAM4H,MAAM,SAAS7J,MAAO,CAAE,WAAc,SAA1E,YAGR,kBAACqK,GAAA,EAAD,KACKd,MChIV,SAASe,KAAwB,IAAD,EACXpL,mBAAS,IADE,mBACpCiK,EADoC,KAC1BoB,EAD0B,OAECrL,oBAAS,GAFV,mBAEpCsL,EAFoC,KAEpBC,EAFoB,KAkB3C,OAfAhG,qBAAU,WAAM,4CACZ,4BAAAlH,EAAA,6DAIUuF,EAAc/B,EAAIgC,WAAWC,IAAI,YAJ3C,SAKUF,EAAY+D,GAAG,SAAS,SAAC6D,GAC3B,IAAMvB,EAAWuB,EAASC,MAC1BJ,EAAYpB,GACZsB,GAAkB,MAR1B,4CADY,uBAAC,WAAD,wBAYZG,KACD,IAGC,kBAAC,EAAetC,SAAhB,MACK,SAAA7K,GAAI,OACD,6BACI,kBAAC8K,GAAD,MACA,kBAACE,GAAD,CAAkBrC,gBAAiB3I,IAClC+M,GAAkB,kBAAC1B,GAAD,CAAe1C,gBAAiB3I,EAAM0L,SAAUA,EAAUvK,MAAO,iB,YC7BzF,SAASiM,GAAT,GAA+D,IAA5BC,EAA2B,EAAtCnB,UAA8BoB,EAAQ,8BACjE5G,EAAgBa,qBAAWhB,GAA3BG,YACR,OACI,kBAAC,IAAD,iBAAW4G,EAAX,CAAiBC,OAAQ,SAAAC,GAAU,OAAM9G,EAAe,kBAAC2G,EAAmBG,GAAmB,kBAAC,IAAD,CAAUxL,GAAI,e,WCkGtGyL,G,YAvFb,WAAY9I,GAAQ,IAAD,8BACjB,4CAAMA,KAOR+I,kBARmB,sBAQC,sBAAA5N,EAAA,+EAGEN,IAHF,cAGhB,EAAKQ,KAHW,gBAMM,EAAKA,KAAK2N,IAAIC,cANpB,cAMhB,EAAK7E,SANW,gBASO,EAAK/I,KAAK2N,IAAIE,IAAIC,QATzB,OAShB,EAAKC,UATW,OAWhB,EAAKnF,gBAAkB,IAAI,EAAK5I,KAAK2N,IAAIK,SACvCC,EAAgBC,IAChBD,EAAgBE,SAAS,EAAKJ,YAAcE,EAAgBE,SAAS,EAAKJ,WAAW7I,SAGvF,EAAKuE,oBAAsB,IAAI,EAAKzJ,KAAK2N,IAAIK,SAC3CI,EAAoBF,IACpBE,EAAoBD,SAAS,EAAKJ,YAAcK,EAAoBD,SAAS,EAAKJ,WAAW7I,SAG/F,EAAKqF,YAAc,IAAI,EAAKvK,KAAK2N,IAAIK,SACnCK,EAAYH,IACZG,EAAYF,SAAS,EAAKJ,YAAcM,EAAYF,SAAS,EAAKJ,WAAW7I,SAK/E,EAAKoJ,SAAS,CACZC,YAAY,EACZ5F,gBAAiB,CACfC,gBAAiB,EAAKA,gBACtBa,oBAAqB,EAAKA,oBAC1BK,2BAA4BsE,EAAoBD,SAAS,EAAKJ,WAAW7I,QACzEqF,YAAa,EAAKA,YAClBvK,KAAM,EAAKA,KACX+I,SAAU,EAAKA,YApCH,kDA0ChBrD,MAAM,0EAGNvF,QAAQqO,MAAR,MA7CgB,0DANlB,EAAK5I,MAAQ,CACX2I,YAAY,EACZ5F,gBAAiB,MAJF,E,sEA0DjB,OAAKH,KAAK5C,MAAM2I,WAQd,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,yBAAK3M,UAAU,OACb,kBAAC,EAAewF,SAAhB,CAAyBjB,MAAOqC,KAAK5C,MAAM+C,iBACzC,kBAAC,IAAD,CAAO8F,KAAK,IAAIC,OAAK,EAACxC,UAAW5F,IACjC,kBAAC,IAAD,CAAOmI,KAAK,SAASvC,UAAW5E,IAChC,kBAAC8F,GAAD,CAAcqB,KAAK,SAASvC,UAAWW,KACvC,kBAAC,IAAD,CACE4B,KAAK,UACLlB,OAAQ,SAAC5I,GAAD,OACN,kBAAC+F,GAAiB/F,UAjBvB,yBAAK/C,UAAU,OACpB,4E,GA7DU+M,aCXEC,QACW,cAA7BhP,OAAOgL,SAASiE,UAEe,UAA7BjP,OAAOgL,SAASiE,UAEhBjP,OAAOgL,SAASiE,SAASC,MACvB,2DCZNC,IAASxB,OAAO,kBAAC,GAAD,MAASyB,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.0d9fcc1b.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { useState } from 'react';\n\n// MaterialUI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\n\n// React Router\nimport { Link, Redirect } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    appBar: {\n        background: '#20232a'\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        \"&:hover\": {\n            backgroundColor: \"#282c34\"\n        }\n    },\n    title: {\n        flexGrow: 1,\n    },\n    button: {\n        \"&:hover\": {\n            backgroundColor: \"#282c34\"\n        }\n    },\n    right: {\n        marginLeft: \"auto\",\n        \"&:hover\": {\n            backgroundColor: \"#282c34\"\n        }\n    }\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    const [redirectPage, setRedirectPage] = useState(null);\n\n    function loginPage() {\n        setRedirectPage(<Redirect push to=\"/login\" />);\n    }\n\n    function statusPage() {\n        setRedirectPage(<Redirect push to=\"/status\" />);\n    }\n\n    if (redirectPage != null) {\n        return redirectPage;\n    }\n    else {\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\" className={classes.appBar}>\n                    <Toolbar>\n                        <Link to=\"/\">\n                            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                                <img src=\"../KryptoniteLogo.svg\" alt=\"KryptoniteLogo\" style={{ height: \"60px\", width: \"60px\" }} />\n                            </IconButton>\n                        </Link>\n                        <Typography variant=\"h6\">Kryptonite Token</Typography>\n                        <Button color=\"inherit\" className={classes.right} onClick={statusPage}>Status</Button>\n                        <Button color=\"inherit\" className={classes.button} onClick={loginPage}>Login</Button>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}","import React from 'react';\n\n// MaterialUI imports\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nexport default function HomepageInformation() {\n    return (\n        <Container style={{ 'marginTop': '2%', 'width': '100%' }}>\n            <Grid container spacing={2}>\n                <Grid item xs={3}></Grid>\n                <Grid item xs={6}>\n                    <h2 style={{ 'color': 'white', 'fontFamily': 'monospace', 'fontWeight': 'bold'}}>\n                        Obviously a fake stablecoin backed by <span style={{ color: \"#18FF1E\" }}>Kryptonite</span> mineral\n                    </h2>\n                    <h2 style={{ 'color': 'white', 'fontFamily': 'monospace', 'fontWeight': 'lighter' }}>\n                        Each Kryptonite ERC-20 token is 1-to-1 pegged to the 1g of Kryptonite mineral\n                    </h2>\n                    <a href=\"https://en.wikipedia.org/wiki/Kryptonite\">\n                        <img src=\"KryptoniteLogo.svg\" alt=\"KryptoniteLogo\" style={{ height: \"160px\", width: \"160px\" }} />\n                    </a>\n                </Grid>\n                <Grid item xs={3}></Grid>\n            </Grid>\n        </Container>\n    );\n}","import firebase from \"firebase\"\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCC2qX2Mqz37QOSf49qRkV29jeIWFHBAGw\",\n    authDomain: \"safebayproject.firebaseapp.com\",\n    projectId: \"safebayproject\",\n    storageBucket: \"safebayproject.appspot.com\",\n    messagingSenderId: \"536690906214\",\n    appId: \"1:536690906214:web:4a97bab10e3155f6a9c9a7\",\n    measurementId: \"G-HF37CEYQVH\"\n};\n\nconst app = firebase.initializeApp(firebaseConfig);\n\nexport default app;\n","import React, { useState } from 'react';\n\n// MaterialUI components\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Firebase\nimport app from '../firebase/firebase';\n\n// React Router\nimport { Redirect } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles({\n    container: {\n        marginTop: '3%',\n        width: '40%'\n    },\n    root: {\n        backgroundColor: \"#20232a\",\n        border: '1px solid',\n        borderRadius: 15,\n        borderColor: \"#18FF1E\",\n        padding: 10\n    },\n    title: {\n        color: 'white',\n        fontFamily: 'monospace',\n        fontWeight: 'lighter',\n    },\n    button: {\n        color: 'white',\n        fontSize: \"15px\",\n        fontFamily: 'monospace',\n        fontWeight: 'lighter',\n        \"&:hover\": {\n            backgroundColor: \"#282c34\"\n        }\n    },\n    text: {\n        color: 'white',\n        fontFamily: 'monospace',\n        fontWeight: 'bold'\n    },\n    input: {\n        color: 'white',\n    }\n});\n\nexport default function LandingPageForm(props) {\n    const classes = useStyles();\n    const [firstName, setfirstName] = useState(\"Clark\");\n    const [lastName, setLastName] = useState(\"Kent\");\n    const [email, setEmail] = useState(\"clark.kent@superman.com\");\n    const [address, setAddress] = useState(\"0x123...\");\n    const [redirectPage, setRedirectPage] = useState(null);\n\n    function handleChangeFirstName(event) {\n        setfirstName(event.target.value);\n    }\n\n    function handleChangelastName(event) {\n        setLastName(event.target.value);\n    }\n\n    function handleChangeEmail(event) {\n        setEmail(event.target.value);\n    }\n\n    function handleChangeAddress(event) {\n        setAddress(event.target.value);\n    }\n\n    // Creating new requst to database\n    async function handleSubmit(event) {\n        const requestsRef = app.database().ref('requests');\n        const request = {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            address: address,\n            kyc: false\n        }\n        requestsRef.push(request);\n\n        alert('You have successfully registered! Please wait until KYC is completed. You may check the porgress on status page.');\n\n        // If signup has been successful it it redirrecting user to status page to check his/her KYC status.\n        setRedirectPage(\n            <Redirect\n                push\n                to={{ \n                    pathname: \"/status\",\n                    state: { address: address} \n                }}\n            />\n        );\n    }\n\n    if (redirectPage != null) {\n        return redirectPage;\n    }\n    else {\n        return (\n            <Container className={classes.container} >\n                <Paper className={classes.root} elevation={3}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <h1 className={classes.title}>Sign Up to buy Kryptonite!</h1>\n                            <div className={classes.text}>\n                                In order to buy tokens you must first go through KYC process. Once you have been approved (whitelisted)\n                                you will be able to buy Kryptonite tokens. Please check on the status page your KYC process.\n                        </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                className={classes.button}\n                                InputProps={{\n                                    className: classes.input\n                                }}\n                                id=\"firstName\"\n                                label=\"First name\"\n                                variant=\"outlined\"\n                                value={firstName}\n                                onChange={handleChangeFirstName}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                className={classes.button}\n                                InputProps={{\n                                    className: classes.input\n                                }}\n                                id=\"lastName\"\n                                label=\"Last name\"\n                                variant=\"outlined\"\n                                value={lastName}\n                                onChange={handleChangelastName}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                className={classes.button}\n                                InputProps={{\n                                    className: classes.input\n                                }}\n                                id=\"email\"\n                                label=\"Email\"\n                                variant=\"outlined\"\n                                value={email}\n                                onChange={handleChangeEmail}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                className={classes.button}\n                                InputProps={{\n                                    className: classes.input\n                                }}\n                                id=\"address\"\n                                label=\"Address\"\n                                variant=\"outlined\"\n                                value={address}\n                                onChange={handleChangeAddress}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button className={classes.button} variant=\"outlined\" onClick={handleSubmit} >Submit request</Button>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Container>\n        );\n    }\n};","// ReactJS components\nimport React from \"react\";\n\n// Local ReactJs components\nimport HomepageHeader from \"../components/HomepageHeader\";\nimport HomepageInformation from \"../components/HomepageInformation\";\nimport LandingPageForm from \"../components/LandingPageForm\";\n\nexport default function HomepageScreen() {\n    return (\n        <div>\n            <HomepageHeader />\n            <HomepageInformation />\n            <LandingPageForm />\n        </div>\n\n    );\n}","import React, { useEffect, useState } from \"react\";\nimport app from \"../firebase/firebase\";\n\nexport const AuthContext = React.createContext({currentUser: null});\n\nexport const AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [pending, setPending] = useState(true);\n\n    useEffect(() => {\n        app.auth().onAuthStateChanged((user) => {\n            setCurrentUser(user)\n            setPending(false)\n        });\n    }, []);\n\n    if (pending) {\n        return <>Loading...</>\n    }\n    else {\n        return (\n            <AuthContext.Provider value={{currentUser: currentUser}}>\n                {children}\n            </AuthContext.Provider>\n        );\n    }\n};","// ReactJS components\nimport React, { useState, useContext, useCallback } from \"react\";\n\n// Local ReactJs components\nimport HomepageHeader from \"../components/HomepageHeader\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport app from \"../firebase/firebase\";\n\n// MaterialUI components\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// React Router\nimport { Redirect } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles({\n    container: {\n        marginTop: '3%',\n        width: '40%'\n    },\n    root: {\n        backgroundColor: \"#20232a\",\n        border: '1px solid',\n        borderRadius: 15,\n        borderColor: \"#18FF1E\",\n        padding: 10\n    },\n    title: {\n        color: 'white',\n        fontFamily: 'monospace',\n        fontWeight: 'lighter',\n    },\n    subtitle: {\n        color: 'white',\n        fontFamily: 'monospace',\n        fontWeight: 'bold'\n    },\n    button: {\n        color: 'white',\n        fontSize: \"15px\",\n        fontFamily: 'monospace',\n        fontWeight: 'lighter',\n        \"&:hover\": {\n            backgroundColor: \"#282c34\"\n        }\n    },\n    input: {\n        color: 'white',\n    }\n});\n\nexport default function LoginScreen() {\n    const { currentUser } = useContext(AuthContext);\n    const classes = useStyles();\n    const [email, setEmail] = useState(\"Email address\");\n    const [password, setPassword] = useState(\"Password\");\n    const [redirectPage, setRedirectPage] = useState(null);\n\n    function emailHandleChange(event) {\n        setEmail(event.target.value);\n    }\n\n    function passwordHandleChange(event) {\n        setPassword(event.target.value);\n    }\n\n    async function login(event) {\n        event.preventDefault();\n        try {\n            await app.auth().signInWithEmailAndPassword(email, password);\n            console.log('logged in...')\n            setRedirectPage(<Redirect push to=\"/admin\" />);\n        } catch (error) {\n            alert(error);\n        }\n    }\n\n    if (currentUser) {\n        return <Redirect push to=\"/admin\" />;\n    }\n    else {\n        return (\n            <div>\n                <HomepageHeader />\n                <Container className={classes.container} >\n                    <Paper className={classes.root} elevation={3}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <a href=\"https://en.wikipedia.org/wiki/Kryptonite\">\n                                    <img src=\"KryptoniteLogo.svg\" alt=\"KryptoniteLogo\" style={{ height: \"160px\", width: \"160px\" }} />\n                                </a>\n                                <div className={classes.subtitle}>\n                                    ERC-20 token backed by <span style={{ color: \"#18FF1E\" }}>Kryptonite</span> mineral\n                            </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <h1 className={classes.title}>Login page</h1>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    className={classes.button}\n                                    InputProps={{\n                                        className: classes.input\n                                    }}\n                                    id=\"email\"\n                                    label=\"Email address\"\n                                    variant=\"outlined\"\n                                    value={email}\n                                    onChange={emailHandleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    className={classes.button}\n                                    InputProps={{\n                                        className: classes.input\n                                    }}\n                                    type=\"password\"\n                                    id=\"password\"\n                                    label=\"Password\"\n                                    variant=\"outlined\"\n                                    value={password}\n                                    onChange={passwordHandleChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Button className={classes.button} variant=\"outlined\" onClick={login} >Login</Button>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                </Container>\n            </div>\n        );\n    }\n}","import React, { useState, useEffect } from 'react';\n\n// MaterialUI components\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n    container: {\n        marginTop: '3%',\n        width: '40%'\n    },\n    root: {\n        backgroundColor: \"#20232a\",\n        border: '1px solid',\n        borderRadius: 15,\n        borderColor: \"#18FF1E\",\n        padding: 10\n    },\n    title: {\n        color: 'white',\n        fontFamily: 'monospace',\n        fontWeight: 'lighter',\n    },\n    button: {\n        color: 'white',\n        fontSize: \"15px\",\n        fontFamily: 'monospace',\n        fontWeight: 'lighter',\n        \"&:hover\": {\n            backgroundColor: \"#282c34\"\n        }\n    },\n    text: {\n        color: 'white',\n        fontFamily: 'monospace',\n        fontWeight: 'bold'\n    },\n    input: {\n        color: 'white',\n    }\n});\n\nfunction partial(func /*, 0..n args */) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return function () {\n        var allArguments = args.concat(Array.prototype.slice.call(arguments));\n        return func.apply(this, allArguments);\n    };\n}\n\nasync function getTokenBalance(props, setBalance) {\n    let amount = await props.contractContext.kryptoniteToken.methods.balanceOf(props.contractContext.accounts[0]).call();\n    setBalance(amount);\n}\n\nasync function listenToTransferEvent(props, setBalance) {\n    let callback = partial(getTokenBalance, props, setBalance);\n    props.contractContext.kryptoniteToken.events.Transfer({ to: props.contractContext.accounts[0] }).on(\"data\", callback);\n}\n\n\nexport default function BuyTokens(props) {\n    const classes = useStyles();\n    const [myBalance, setBalance] = useState(0);\n    const [buyTokenAmount, setBuyTokenAmount] = useState(10);\n\n    // useEffect hook for getting the balance of KRY tokens\n    useEffect(() => {\n        getTokenBalance(props, setBalance);\n    }, [props, setBalance]);\n\n    // useEffect hook to subscribe to the emitted Transfer events on ERC20 smart contract\n    // Only events related to the current address\n    useEffect(() => {\n        listenToTransferEvent(props, setBalance)\n    }, [props, setBalance])\n\n    function handleChange(event) {\n        setBuyTokenAmount(event.target.value);\n    }\n\n    // Handling the process of buying the tokens (interraction with kryptoniteTokenSale smart contract)\n    async function buyTokens() {\n        await props.contractContext.kryptoniteTokenSale.methods.buyTokens(props.contractContext.accounts[0]).send({\n            from: props.contractContext.accounts[0],\n            value: buyTokenAmount\n        })\n    }\n\n    return (\n        <Container className={classes.container} >\n            <Paper className={classes.root} elevation={3}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <h1 className={classes.title}>Buy Kryptonite Tokens</h1>\n                        <h3 className={classes.title}>Contract address: {props.contractContext.kryptoniteTokenSaleAddress}</h3>\n                        <h3 className={classes.title}>My Balance: {myBalance} KRY</h3>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            className={classes.button}\n                            InputProps={{\n                                className: classes.input\n                            }}\n                            id=\"buyTokenAmount\"\n                            label=\"Token amount\"\n                            variant=\"outlined\"\n                            value={buyTokenAmount}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button className={classes.button} variant=\"outlined\" onClick={buyTokens}>Buy tokens</Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Container>\n    );\n};","import React, { useState } from 'react';\n\n// MaterialUI components\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst useStyles = makeStyles({\n    container: {\n        marginTop: '3%',\n        width: '40%'\n    },\n    rootGreen: {\n        backgroundColor: \"#20232a\",\n        border: '1px solid',\n        borderRadius: 15,\n        borderColor: \"#18FF1E\",\n        padding: 10\n    },\n    rootRed: {\n        backgroundColor: \"#20232a\",\n        border: '1px solid',\n        borderRadius: 15,\n        borderColor: \"#ff0000\",\n        padding: 10\n    },\n    title: {\n        color: 'white',\n        fontFamily: 'monospace',\n        fontWeight: 'lighter',\n    },\n    button: {\n        color: 'white',\n        fontSize: \"15px\",\n        fontFamily: 'monospace',\n        fontWeight: 'lighter',\n        \"&:hover\": {\n            backgroundColor: \"#282c34\"\n        }\n    },\n    text: {\n        color: 'white',\n        fontFamily: 'monospace',\n        fontWeight: 'bold'\n    },\n    input: {\n        color: 'white',\n    }\n});\n\nexport default function KYCStatus(props) {\n    // Address that will be initially displayed in the text field.\n    // Checking if the user has been redirected from the Landing Page form and if so, populate text field with specified address.\n    let addressPlaceholder = \"0x1234...\";\n    if (props.address){\n        addressPlaceholder = props.address;\n    }\n\n    const classes = useStyles();\n    const [address, setAddress] = useState(addressPlaceholder);\n    const [statusMessage, setStatusMessage] = useState(\"\");\n    const [isKycCompleted, setIsKycCompleted] = useState(null);\n\n\n    function handleChange(event) {\n        setAddress(event.target.value);\n    }\n\n    // Interracting with KryptoniteTokenSale smart contract.\n    // Checking if the specified address has been whitelisted and displaying appropriate message for that.\n    // If the KYC process is completed allowing used in the parent container component to buy tokens.\n    async function verifyAddress(event) {\n        event.preventDefault();\n\n        let isKycCompleted = false;\n\n        // Get flag from token crowdsale smart contract\n        try {\n            isKycCompleted = await props.contractContext.kycContract.methods.isKycCompleted(address).call();\n        } catch (error) {\n            setStatusMessage(\"Please enter a valid address.\");\n            setIsKycCompleted(isKycCompleted);\n            return;\n        }\n\n        // Updating the states\n        setIsKycCompleted(isKycCompleted);\n        if (isKycCompleted) {\n            setStatusMessage(\"You address has been whitelisted. You can buy KRY toneks now.\");\n        }\n        else {\n            setStatusMessage(\"You address hasn't been whitelisted yet. Please have patience while your request is being processed.\");\n        }\n\n        // Updating the parent component\n        props.tokenPurchaseEnabled(isKycCompleted);\n    }\n\n    return (\n        <Container className={classes.container} >\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <h1 className={classes.title}>Verify KYC process</h1>\n                    <div className={classes.text}>\n                        Specify the wallet address to check if your address has been whitelisted.\n                        </div>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        className={classes.button}\n                        InputProps={{\n                            className: classes.input\n                        }}\n                        id=\"address\"\n                        label=\"Address\"\n                        variant=\"outlined\"\n                        value={address}\n                        onChange={handleChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Button className={classes.button} variant=\"outlined\" onClick={verifyAddress} >Verify address</Button>\n                </Grid>\n                {isKycCompleted != null && isKycCompleted === false &&\n                    <Grid item xs={12}>\n                        <Paper className={classes.rootRed} elevation={3}>\n                            <h2 className={classes.title}>{statusMessage}</h2>\n                        </Paper>\n                    </Grid>\n                }\n                {isKycCompleted &&\n                    <Grid item xs={12}>\n                        <Paper className={classes.rootGreen} elevation={3}>\n                            <h2 className={classes.title}>{statusMessage}</h2>\n                        </Paper>\n                    </Grid>\n                }\n            </Grid>\n        </Container>\n    );\n};","import React from \"react\";\n\n/**\n * Setting up a context that stores initialized contacts for interaction with react components.\n */\nconst ContractContex = React.createContext({\n    kryptoniteToken: null,\n    kryptoniteTokenSale: null,\n    kryptoniteTokenSaleAddress: null,\n    kycContract: null,\n    web3: null,\n    accounts: null\n}); \n\nexport default ContractContex;","// ReactJS components\nimport React, { useState } from \"react\";\n\n// Local ReactJs components\nimport HomepageHeader from \"../components/HomepageHeader\";\nimport BuyTokens from \"../components/BuyTokens\";\nimport KYCStatus from \"../components/KYCStatus\";\n\n// Contract context\nimport ContractContex from \"../context/ContractContex\"\n\nexport default function StatusScreen(props) {\n    const [isKycCompleted, setIsKycCompleted] = useState(false);\n\n    // If user has been automatically redirected to this page right after signing up (from Langing Page)\n    // Automatically populate address field, with the address he/she provided, on the status page, for KYC check.\n    let addressLandingPage = null\n    if(props.location && props.location.state){\n        addressLandingPage = props.location.state.address;\n    }\n\n    return (\n        <ContractContex.Consumer>\n            {web3 => (\n                <div>\n                    <HomepageHeader />\n                    <KYCStatus contractContext={web3} tokenPurchaseEnabled={setIsKycCompleted} address={addressLandingPage}/>\n                    {isKycCompleted && <BuyTokens contractContext={web3}/>}\n                </div>\n            )}\n        </ContractContex.Consumer >\n    );\n}","import React, { useState } from 'react';\n\n// MaterialUI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\n\n// React Router\nimport { Link, Redirect } from \"react-router-dom\";\n\n// Firebase\nimport app from \"../firebase/firebase\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    appBar: {\n        background: '#20232a'\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        \"&:hover\": {\n            backgroundColor: \"#282c34\"\n        }\n    },\n    title: {\n        flexGrow: 1,\n    },\n    right: {\n        marginLeft: \"auto\",\n        \"&:hover\": {\n            backgroundColor: \"#282c34\"\n        }\n    }\n}));\n\nexport default function AdminHeader() {\n    const classes = useStyles();\n    const [redirectPage, setRedirectPage] = useState(null);\n\n    function logout() {\n        app.auth().signOut();\n        setRedirectPage(<Redirect push to=\"/\" />);\n    }\n\n    if (redirectPage != null) {\n        return redirectPage;\n    }\n    else {\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\" className={classes.appBar}>\n                    <Toolbar>\n                        <Link to=\"/\">\n                            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                                <img src=\"../KryptoniteLogo.svg\" alt=\"KryptoniteLogo\" style={{ height: \"60px\", width: \"60px\" }} />\n                            </IconButton>\n                        </Link>\n                        <Typography variant=\"h6\">Kryptonite Token</Typography>\n                        <Button color=\"inherit\" className={classes.right} onClick={logout}>Logout</Button>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}","import React, { useState } from 'react';\n\n// MaterialUI components\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n    container: {\n        marginTop: '3%', \n        width: '40%'\n    },\n    root: {\n        backgroundColor: \"#20232a\",\n        border: '1px solid',\n        borderRadius: 15,\n        borderColor: \"#18FF1E\",\n        padding: 10\n    },\n    title: {\n        color: 'white',\n        fontFamily: 'monospace',\n        fontWeight: 'lighter',\n    },\n    button: {\n        color: 'white',\n        fontSize: \"15px\",\n        fontFamily: 'monospace',\n        fontWeight: 'lighter',\n        \"&:hover\": {\n            backgroundColor: \"#282c34\"\n        }\n    },\n    text: {\n        color: 'white',\n        fontFamily: 'monospace',\n        fontWeight: 'bold'\n    },\n    input: {\n        color: 'white',\n    }\n});\n\nexport default function WhitelistAddress(props) {\n    const classes = useStyles();\n    const [address, setAddress] = useState(\"0x1234...\");\n\n    function handleChange(event) {\n        setAddress(event.target.value);\n    }\n\n    async function handleSubmit(event) {\n        /**\n         * Interacting with smart contract - Approving KYC for specified address.\n         */\n        await props.contractContext.kycContract.methods.approveAddress(address).send({\n            from: props.contractContext.accounts[0]\n        });\n        event.preventDefault();\n        alert('A name was submitted: ' + address);\n    }\n\n    return (\n        <Container className={classes.container} >\n            <Paper className={classes.root} elevation={3}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <h1 className={classes.title}>Whitelist address:</h1>\n                        <div className={classes.text}>\n                            Manually approve address to allow investors to buy tokens.\n                        </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            className={classes.button}\n                            InputProps={{\n                                className: classes.input\n                            }}\n                            id=\"address\"\n                            label=\"Address\"\n                            variant=\"outlined\"\n                            value={address}\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button className={classes.button} variant=\"outlined\" onClick={handleSubmit} >Approve address</Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </Container>\n    );\n};","// ReactJS imports\nimport React, { useState, useEffect, useContext } from 'react';\n\n// MaterialUI imports\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport IconButton from '@material-ui/core/IconButton';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { green, red } from '@material-ui/core/colors';\n\n// Firebase\nimport app from '../firebase/firebase';\n\nconst useStyles = makeStyles({\n    container: {\n        marginTop: '3%',\n        width: '60%'\n    },\n    table: {\n        minWidth: 450,\n        backgroundColor: \"#20232a\",\n        color: \"white\"\n    },\n    tableContainer: {\n        marginTop: 20,\n        height: 450,\n        backgroundColor: \"#20232a\",\n        color: \"white\", border: '1px solid',\n        borderRadius: 5,\n    },\n    text: {\n        color: 'white'\n    },\n    title: {\n        color: 'white',\n        fontFamily: 'monospace',\n        fontWeight: 'lighter',\n    },\n});\n\n\nfunction createRows(requests, classes, approveOrDisapproveRequest) {\n    /**\n     * Creating and populating rows for a table.\n     * For each request we have we create a new row.\n     */\n    let tableRows = [];\n    for (let key in requests) {\n        tableRows.push(\n            < TableRow key={key} >\n                <TableCell className={classes.text} component=\"th\" scope=\"row\">\n                    {requests[key].address}\n                </TableCell>\n                <TableCell className={classes.text} align=\"right\">{requests[key].firstName}</TableCell>\n                <TableCell className={classes.text} align=\"right\">{requests[key].lastName}</TableCell>\n                <TableCell className={classes.text} align=\"right\">{requests[key].email}</TableCell>\n                <TableCell className={classes.text} align=\"center\">{requests[key].kyc ? \"Yes\" : \"No\"}</TableCell>\n                <TableCell className={classes.text} align=\"right\">\n                    <IconButton color=\"primary\" aria-label=\"add to shopping cart\" size=\"small\" onClick={(event) => approveOrDisapproveRequest(event, key)}>\n                        {requests[key].kyc ? <p style={{ color: red[500] }} >Disapprove</p> : <p style={{ color: green[500] }} >Approve</p>}\n                        &nbsp;\n                        {requests[key].kyc ? <CancelIcon color=\"secondary\" /> : <VerifiedUserIcon style={{ color: green[500] }} />}\n                    </IconButton>\n                </TableCell>\n            </ TableRow>\n        );\n\n    }\n    return tableRows\n}\n\nexport default function RequestsTable(props) {\n    const classes = useStyles();\n\n    async function approveOrDisapproveAddress(address, isKycCompleted) {\n        /**\n         * Interacting with smart contract - Approving KYC for specified address.\n         */\n        if (isKycCompleted) {\n            await props.contractContext.kycContract.methods.approveAddress(address).send({\n                from: props.contractContext.accounts[0]\n            });\n        }\n        else {\n            await props.contractContext.kycContract.methods.revokeAddress(address).send({\n                from: props.contractContext.accounts[0]\n            });\n        }\n    }\n\n    const approveOrDisapproveRequest = async (event, requestId) => {\n        /**\n         * Function that handles the user action and updates the kyc status. \n         */\n\n        // Change the KYC flaf\n        let request = props.requests[requestId];\n        request.kyc = !request.kyc;\n\n        // Saving address KYC status in smart contract\n        try {\n            await approveOrDisapproveAddress(request.address, request.kyc)\n        } catch (error) {\n            alert('Only onwer of the KYC smart contract can approve or revoke access');\n            return;\n        }\n\n        // Save record to the database\n        const requessRef = app.database().ref('requests').child(requestId);\n        await requessRef.update({\n            kyc: request.kyc\n        });\n        request.kyc ? alert(\"Successfully approved the request!\") : alert(\"Revoked the request!\");\n\n    }\n\n    let tableRows = createRows(props.requests, classes, approveOrDisapproveRequest);\n\n    return (\n        <Container className={classes.container} >\n            <h1 className={classes.title}>Approve/Dissaprove requests (KYC):</h1>\n            <TableContainer component={Paper} className={classes.tableContainer}>\n                <h4 align=\"left\">&nbsp;&nbsp;&nbsp;{props.title}</h4>\n                <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell className={classes.text} align=\"left\" style={{ 'fontWeight': 'bold' }}>Address</TableCell>\n                            <TableCell className={classes.text} align=\"right\" style={{ 'fontWeight': 'bold' }}>Name</TableCell>\n                            <TableCell className={classes.text} align=\"right\" style={{ 'fontWeight': 'bold' }}>Surname</TableCell>\n                            <TableCell className={classes.text} align=\"right\" style={{ 'fontWeight': 'bold' }}>Email</TableCell>\n                            <TableCell className={classes.text} align=\"right\" style={{ 'fontWeight': 'bold' }}>KYC completed</TableCell>\n                            <TableCell className={classes.text} align=\"center\" style={{ 'fontWeight': 'bold' }}>Action</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tableRows}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Container>\n    );\n}","// ReactJS components\nimport React, { useState, useEffect } from \"react\";\n\n// Local ReactJs components\nimport AdminHeader from \"../components/AdminHeader\";\nimport WhitelistAddress from \"../components/WhitelistAddress\";\nimport RequestsTable from \"../components/RequestsTable\";\n\n// Contract context\nimport ContractContex from \"../context/ContractContex\"\n\n// Firebase\nimport app from '../firebase/firebase';\n\n\nexport default function AdminDashboardScreen() {\n    const [requests, setRequests] = useState([])\n    const [requestsLoaded, setRequestsLoaded] = useState(false)\n    useEffect(() => {\n        async function getRequests() {\n            /**\n             * Getting the requests data from the database and updating state that stores that info.\n             */\n            const requestsRef = app.database().ref('requests');\n            await requestsRef.on('value', (snapshot) => {\n                const requests = snapshot.val();\n                setRequests(requests);\n                setRequestsLoaded(true);\n            });\n        }\n        getRequests();\n    }, []);\n\n    return (\n        <ContractContex.Consumer>\n            {web3 => (\n                <div>\n                    <AdminHeader />\n                    <WhitelistAddress contractContext={web3} />\n                    {requestsLoaded && <RequestsTable contractContext={web3} requests={requests} title={\"Requests\"}/>}\n                </div>\n            )}\n        </ContractContex.Consumer >\n    );\n}","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\n\n\n/**\n * Wrapper arount React Route that checks wheather the user is logged in or not.\n * In case he's logged in (user details saved in React Context) component and props are passed to the regular Route.\n * And in other case, user is redirected to the login screen. \n */\nexport default function PrivateRoute({ component: RouteComponent, ...rest }) {\n    const { currentUser } = useContext(AuthContext);\n    return (\n        <Route {...rest} render={routeProps => !!currentUser ? (<RouteComponent {...routeProps} />) : (<Redirect to={\"/login\"} />)}\n        />\n    );\n};\n\n","// ReactJS components\nimport React, { Component } from \"react\";\n\n// Ethereum contracts\nimport KryptoniteToken from \"./contracts/KryptoniteToken.json\";\nimport KryptoniteTokenSale from \"./contracts/KryptoniteTokenSale.json\";\nimport KYCContract from \"./contracts/KYCContract.json\";\nimport getWeb3 from \"./getWeb3\";\n\n// Local ReactJs components\nimport HomepageScreen from \"./screens/HomepageScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport StatusScreen from \"./screens/StatusScreen\";\nimport AdminDashboardScreen from \"./screens/AdminDashboardScreen\";\nimport ContractContex from \"./context/ContractContex\";\n\n// React Router\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport { AuthProvider } from \"./context/AuthContext\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      web3Loaded: false,\n      contractContext: null\n    }\n  }\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      this.web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      this.accounts = await this.web3.eth.getAccounts();\n\n      //Getting the ethereum network id (Mainnet, Testnet, Ropsten, ...)\n      this.networkId = await this.web3.eth.net.getId();\n\n      this.kryptoniteToken = new this.web3.eth.Contract(\n        KryptoniteToken.abi,\n        KryptoniteToken.networks[this.networkId] && KryptoniteToken.networks[this.networkId].address\n      );\n\n      this.kryptoniteTokenSale = new this.web3.eth.Contract(\n        KryptoniteTokenSale.abi,\n        KryptoniteTokenSale.networks[this.networkId] && KryptoniteTokenSale.networks[this.networkId].address\n      );\n\n      this.kycContract = new this.web3.eth.Contract(\n        KYCContract.abi,\n        KYCContract.networks[this.networkId] && KYCContract.networks[this.networkId].address\n      );\n\n      // Loading is finished.\n      // Setting up the contract context so other components could use the contract abi. \n      this.setState({\n        web3Loaded: true,\n        contractContext: {\n          kryptoniteToken: this.kryptoniteToken,\n          kryptoniteTokenSale: this.kryptoniteTokenSale,\n          kryptoniteTokenSaleAddress: KryptoniteTokenSale.networks[this.networkId].address,\n          kycContract: this.kycContract,\n          web3: this.web3,\n          accounts: this.accounts\n        }\n      });\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  render() {\n    if (!this.state.web3Loaded) {\n      return <div className=\"App\">\n        <h1>\n          Loading Web3, accounts, and contract...\n        </h1>\n      </div>;\n    }\n    return (\n      <AuthProvider>\n        <Router>\n          <div className=\"App\">\n            <ContractContex.Provider value={this.state.contractContext}>\n              <Route path=\"/\" exact component={HomepageScreen} />\n              <Route path=\"/login\" component={LoginScreen} />\n              <PrivateRoute path=\"/admin\" component={AdminDashboardScreen} />\n              <Route\n                path=\"/status\"\n                render={(props) => (\n                  <StatusScreen {...props} />\n                )}\n              />\n            </ContractContex.Provider>\n          </div>\n        </Router>\n      </AuthProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}